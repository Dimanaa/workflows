name: .NET Core Desktop

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
        
    - name: Build and Test
      run: |
          dotnet restore .github/workflows/ConsoleApp1/ConsoleApp1/ConsoleApp1.csproj
          dotnet build .github/workflows/ConsoleApp1/ConsoleApp1/ConsoleApp1.csproj
          dotnet test .github/workflows/ConsoleApp1/ConsoleApp1/ConsoleApp1.csproj

    - name: Upload Artifact Directory
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: .github/workflows/ConsoleApp1/**/*

    - name: Firebase authentication and storage specification
      run: |
         cd .github/workflows
         firebase use --add workflows-7be96 --token ${{ secrets.FIREBASE_CLI_TOKEN }}
         firebase deploy --only storage --token ${{ secrets.FIREBASE_CLI_TOKEN }}

    - name: Run PS script to Upload to Firebase Storage     
      run: |
        $env:FIREBASE_API_KEY = "${{ secrets.FIREBASE_API_KEY }}"
        $env:FIREBASE_USER_EMAIL = "${{ secrets.FIREBASE_USER_EMAIL }}"
        $env:FIREBASE_USER_PASSWORD = "${{ secrets.FIREBASE_USER_PASSWORD }}"

         # Run the PowerShell script from an external file
         powershell -File .github/workflows/artifact_upload.ps1

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Login to Docker Registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        registry: docker.io

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: my-artifact

    - name: Build Docker Image
      run: |
          cd ./ConsoleApp1
          ls -al
          docker build -t dimanaa/workflows:latest -f Dockerfile .

    - name: Push Docker Image
      run: |
          cd ./ConsoleApp1
          ls -al
          docker push docker.io/dimanaa/workflows:latest